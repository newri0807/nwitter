{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["authService","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","NweetTextRef","doc","id","onDeleteClick","window","confirm","deleteDoc","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileRef","uid","v4","uploadString","uploadFile","getDownloadURL","nweetPosting","createdAt","Date","now","creatorId","addDoc","collection","maxLength","for","faPlus","accept","files","theFile","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","snapshot","nweetArr","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","element","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37be344f.chunk.js","sourcesContent":["\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n\r\n};\r\n\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport {\r\n  createUserWithEmailAndPassword, signInWithEmailAndPassword, GithubAuthProvider,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from 'firebase/auth';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst inputStyles = {};\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          className=\"authInput authSubmit\"\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;","import { authService } from 'fbase';\r\nimport {\r\n    createUserWithEmailAndPassword, signInWithEmailAndPassword, GithubAuthProvider,\r\n    GoogleAuthProvider,\r\n    signInWithPopup,\r\n} from 'firebase/auth';\r\nimport AuthForm from \"components/AuthForm\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nconst Auth = () => {\r\n    // const [email, setEmail] = useState(\"\");\r\n    // const [password, setPassword] = useState(\"\");\r\n    // const [newAccount, setNewAccount] = useState(true);\r\n    // const [error, setError] = useState(\"\");\r\n    // const onChange = (event) => {\r\n    //     const {\r\n    //         target: { name, value },\r\n    //     } = event;\r\n    //     if (name === \"email\") {\r\n    //         setEmail(value);\r\n    //     } else if (name === \"password\") {\r\n    //         setPassword(value);\r\n    //     }\r\n    // };\r\n\r\n\r\n    // const onSubmit = async (event) => {\r\n    //     event.preventDefault();\r\n    //     try {\r\n    //         let data;\r\n    //         if (newAccount) {\r\n    //             data = await createUserWithEmailAndPassword(\r\n    //                 authService,\r\n    //                 email,\r\n    //                 password\r\n    //             );\r\n    //         } else {\r\n    //             data = await signInWithEmailAndPassword(authService, email, password);\r\n    //         }\r\n    //         console.log(data);\r\n    //     } catch (error) {\r\n    //         setError(error.message);\r\n    //     }\r\n    // };\r\n\r\n    // const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    \r\n\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new GithubAuthProvider();\r\n        }\r\n        await signInWithPopup(authService, provider);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n          icon={faTwitter}\r\n          color={\"#04AAFF\"}\r\n          size=\"3x\"\r\n          style={{ marginBottom: 30 }}\r\n        />\r\n           <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import { dbService, storageService } from 'fbase';\r\nimport React from \"react\";\r\nimport { doc, deleteDoc, updateDoc, getFirestore } from \"@firebase/firestore\";\r\nimport { useState } from 'react/cjs/react.development';\r\nimport { deleteObject, ref } from '@firebase/storage';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const NweetTextRef = doc(dbService, \"nweets\", `${nweetObj.id}`);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (ok) {\r\n            // delete 부분\r\n            await deleteDoc(NweetTextRef);\r\n            await deleteDoc(doc(getFirestore(), `nweets/${nweetObj.id}`));\r\n            await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //작성법1\r\n        await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\r\n            text: newNweet,\r\n        });\r\n\r\n        //작성법2\r\n        // await updateDoc(NweetTextRef, {\r\n        //     text: newNweet,\r\n        // });\r\n\r\n\r\n        setEditing(false);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    {isOwner && (\r\n                        <>\r\n                            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Edit your nweet\"\r\n                                    value={newNweet}\r\n                                    required\r\n                                    autoFocus\r\n                                    onChange={onChange}\r\n                                    className=\"formInput\"\r\n                                />\r\n                                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                            </form>\r\n                            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                                Cancel\r\n                            </span>\r\n                        </>\r\n                    )\r\n\r\n                    }\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {/* {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />} */}\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    {isOwner && (\r\n                        // <>\r\n                        //     <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                        //     <button onClick={toggleEditing}>Edit Nweet</button>\r\n                        // </>\r\n                            <div className=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4, v4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\r\nimport { addDoc, collection } from \"@firebase/firestore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n\r\n\r\n   const onSubmit = async (event) => {\r\n   \r\n        // await addDoc(collection(dbService, \"nweets\"), {\r\n        //     text: nweet,\r\n        //     createdAt: Date.now(),\r\n        //     creatorId: userObj.uid,\r\n        // });\r\n        // setNweet(\"\");\r\n\r\n\r\n        // const fileRef = ref(storageService, `${userObj.uid}/${v4()}`); // 1. 이미지 폴더 생성\r\n        // const response = await uploadString(fileRef, attachment, \"data_url\"); // 2. 폴더에 이미지 넣는 작업\r\n        // console.log(await response.ref.getDownloadURL());\r\n\r\n       if (nweet === \"\") {\r\n           return;\r\n       }\r\n       event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            //파일 경로 참조 만들기\r\n            const fileRef = ref(storageService, `${userObj.uid}/${v4()}`);\r\n            //storage 참조 경로로 파일 업로드 하기\r\n            const uploadFile = await uploadString(fileRef, attachment, \"data_url\");\r\n            console.log(uploadFile);\r\n            //storage에 있는 파일 URL로 다운로드 받기\r\n            attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n        }\r\n\r\n        //트윗할때, 메시지와 사진도 같이 firestore에 생성\r\n        const nweetPosting = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await addDoc(collection(dbService, \"nweets\"), nweetPosting);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n\r\n\r\n    };\r\n\r\n  \r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\nconst onFileChange = (event) => {\r\n        console.log(event.target.files);\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n\r\n        //[FileReader API]\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            console.log(finishedEvent);\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    // <form onSubmit={onSubmit}>\r\n    //   <input\r\n    //     value={nweet}\r\n    //     onChange={onChange}\r\n    //     type=\"text\"\r\n    //     placeholder=\"What's on your mind?\"\r\n    //     maxLength={120}\r\n    //   />\r\n    //   <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n    //   <input type=\"submit\" value=\"Nweet\" />\r\n    //   {attachment && (\r\n    //     <div>\r\n    //       <img src={attachment} width=\"50px\" height=\"50px\" />\r\n    //       <button onClick={onClearAttachment}>Clear</button>\r\n    //     </div>\r\n    //   )}\r\n    // </form>\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n\r\n    );\r\n};\r\nexport default NweetFactory;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport {\r\n    addDoc,\r\n    collection,\r\n    onSnapshot,\r\n    query,\r\n    orderBy,\r\n} from \"firebase/firestore\"\r\nimport Nweet from 'components/Nweet';\r\nimport { getDownloadURL, ref, uploadString } from '@firebase/storage';\r\n//import { v4 } from 'uuid';\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    console.log(userObj);\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    console.log(nweets);\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(dbService, \"nweets\"),\r\n            orderBy(\"createdAt\", \"desc\")\r\n        );\r\n        onSnapshot(q, (snapshot) => {\r\n            const nweetArr = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArr);\r\n        });\r\n    }, []);\r\n\r\n   \r\n    return (\r\n        <div className=\"container\">           \r\n             <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => \r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                {/* <Link to=\"/\" >Home</Link> */}\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                {/* <Link to=\"/profile\" >{userObj.displayName}의 Profile</Link> */}\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n\r\n            </li>\r\n        </ul>\r\n\r\n</nav>;\r\nexport default Navigation;","import { updateProfile } from '@firebase/auth';\r\nimport { collection, getDocs, orderBy, query, where } from '@firebase/firestore';\r\nimport { authService, dbService } from 'fbase';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default ({ userObj , refreshUser}) => {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n    };\r\n    // const getMyNweets = async () => {\r\n    //     const q = query(\r\n    //         collection(dbService, \"nweets\"),\r\n    //         where(\"creatorId\", \"==\", userObj.uid),\r\n    //         orderBy(\"createAt\"),\r\n\r\n    //     );\r\n    //     const querySnapshot = await getDocs(q);\r\n    //     querySnapshot.forEach((doc) => {\r\n    //         console.log(doc.id, \" => \", doc.data());\r\n    //     });\r\n    // };\r\n    // useEffect(() => {\r\n    //     getMyNweets();\r\n    // }, [userObj])\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n\r\n    // const onSubmit = async (event) => {\r\n    //     event.preventDefault();\r\n    //     if (userObj.displayName !== newDisplayName) {\r\n    //         await updateProfile(userObj, { displayName: newDisplayName });\r\n    //         refreshUser();\r\n    //     }\r\n    // };\r\n\r\n\r\n    // v9 사용.. \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await updateProfile(await authService.currentUser, {\r\n            displayName: newDisplayName,\r\n        });\r\n        refreshUser();\r\n    };\r\n\r\n\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName} \r\n                    className=\"formInput\"\r\n                    />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n\r\n            {/* \r\n            <button onClick={onLogOutClick} >\r\n                <Link to=\"/\" >Log Out</Link>\r\n            </button> */}\r\n\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                <Link to=\"/\" >Log Out</Link>\r\n            </span>\r\n        </div>\r\n    )\r\n};","import React, { useState } from 'react';\r\nimport { render } from \"react-dom\";\r\nimport {\r\n    BrowserRouter,\r\n    Routes,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\n\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n\r\n    console.log(userObj);\r\n    return (\r\n        <BrowserRouter>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <div style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n            }}>\r\n                <Routes>\r\n                    {isLoggedIn ? (\r\n                        <>\r\n                            <Route exact path='/' element={<Home userObj={userObj} />} > </Route>\r\n                            <Route exact path='/profile' element={<Profile userObj={userObj} refreshUser={refreshUser} />}> </Route>\r\n                        </>\r\n\r\n                    )\r\n\r\n                        : (<Route exact path='/' element={<Auth />}> </Route>)\r\n                    }\r\n                </Routes>\r\n            </div>\r\n        </BrowserRouter >\r\n    );\r\n\r\n}\r\n\r\nexport default AppRouter;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { authService } from \"fbase\";\r\nimport AppRouter from 'components/Router';\r\nimport { onAuthStateChanged, updateProfile } from \"@firebase/auth\";\r\n\r\n\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  // 작성법 1.\r\n  //  useEffect(() => {\r\n  //   authService.onAuthStateChanged((user) => {\r\n  //     if (user) {\r\n  //       setIsLoggedIn(true);\r\n  //       setUserObj(user);\r\n  //     } else {\r\n  //       setIsLoggedIn(false);\r\n  //     }\r\n  //     setInit(true);\r\n  //     }); \r\n  //   }, []);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n    });\r\n  };\r\n\r\n    \r\n // 작성법 2. - 예외처리 추가\r\n // 이메일로 가입해서 로그인시 displayName이 null로 나와서 에러처리\r\n  // useEffect(() => {\r\n  //   onAuthStateChanged(authService, user => {\r\n  //     if (user) {\r\n  //       setIsLoggedIn(true);\r\n  //       setUserObj({\r\n  //         displayName: authService.currentUser.displayName\r\n  //           ? authService.currentUser.displayName\r\n  //           : 'Anonymous',\r\n  //         uid: authService.uid,\r\n  //       });\r\n  //     } else {\r\n  //       setIsLoggedIn(false);\r\n  //     }\r\n\r\n  //     setInit(true);\r\n  //   })\r\n  //}, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {init ? <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        /> : 'Initailizing...'}\r\n      <footer>&copy;  {new Date().getFullYear()} Nwitter</footer>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from 'components/App';\r\nimport fbase from 'fbase';\r\nimport { auth } from \"fbase\";\r\nimport \"../src/style.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}